Index: src/gui/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport game.Board;\r\nimport game.GameManager;\r\nimport game.Move;\r\nimport game.Piece;\r\nimport gui.images.Field;\r\nimport util.Array;\r\nimport util.Vector;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport java.awt.*;\r\n\r\npublic class Game extends Window {\r\n    public Game() {\r\n        super(\"Game\");\r\n        super.setSize(1100, 860);\r\n        super.setLayout(null);\r\n        super.setLocationRelativeTo(null);\r\n\r\n        createTable();\r\n        createInfo();\r\n    }\r\n\r\n    gui.images.Field[][] fields = null;\r\n\r\n    public gui.images.Field[][] getFields() {\r\n        return this.fields;\r\n    }\r\n\r\n    public gui.images.Field getField(final int x,final int y) {\r\n        return this.fields[x][y];\r\n    }\r\n\r\n    public gui.images.Field getField(final Vector at) {\r\n        return getField(at.X, at.Y);\r\n    }\r\n\r\n    public void clearFields() {\r\n        for (gui.images.Field[] fieldRow : fields)\r\n            for (gui.images.Field field : fieldRow)\r\n                field.setImage(null);\r\n    }\r\n\r\n    private void createTable() {\r\n        JPanel tablePanel = new JPanel();\r\n\r\n        tablePanel.setLayout(new GridLayout(Board.SIZE, Board.SIZE));\r\n        tablePanel.setBounds(10, 10, 800, 800);\r\n        tablePanel.setName(\"table\");\r\n\r\n        fields = new Field[Board.SIZE][Board.SIZE];\r\n\r\n        boolean ws = false;\r\n        for (int i = 0; i < Board.SIZE; i++) {\r\n            for (int j = 0; j < Board.SIZE; j++) {\r\n                fields[i][j] = new Field(new Vector(i, j), new Vector(100, 100), ws = !ws);\r\n                tablePanel.add(fields[i][j]);\r\n            }\r\n            ws = !ws;\r\n        }\r\n\r\n        add(tablePanel);\r\n    }\r\n\r\n    private JPanel getPlayerInfoPanel(boolean isWhite) {\r\n        JPanel panel = new JPanel();\r\n        panel.setBorder(BorderFactory.createLineBorder(isWhite ? Color.LIGHT_GRAY : Color.GRAY, 5));\r\n        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));\r\n\r\n        JLabel label = new JLabel(\"Player info\", SwingConstants.CENTER);\r\n        panel.setPreferredSize(new Dimension(260, label.getPreferredSize().height));\r\n        panel.setFont(label.getFont().deriveFont(Font.BOLD, 20F));\r\n        panel.add(label);\r\n        panel.add(new JLabel());\r\n        return panel;\r\n    }\r\n\r\n    public void updateInfoTable(Piece piece) {\r\n        int pawnsWhite = 0, pawnsBlack = 0,\r\n            rooksWhite = 0, rooksBlack = 0,\r\n            knightsWhite = 0, knightsBlack = 0,\r\n            bishopsWhite = 0, bishopsBlack = 0;\r\n        boolean queenWhite = false, queenBlack = false,\r\n            kingWhite = false, kingBlack = false;\r\n\r\n        util.Array<Piece> piecesWhite = Board.instance.getWhitePieces(),\r\n                          piecesBlack = Board.instance.getBlackPieces();\r\n        for (int i=0; i<Board.instance.getWhitePieces().size(); i++) {\r\n            switch (piecesWhite.get(i).getType()) {\r\n                case Pawn -> pawnsWhite++;\r\n                case Rook -> rooksWhite++;\r\n                case Knight -> knightsWhite++;\r\n                case Bishop -> bishopsWhite++;\r\n                case Queen -> queenWhite = true;\r\n                case King -> kingWhite = true;\r\n            }\r\n        }\r\n        for (int i=0; i<Board.instance.getBlackPieces().size(); i++) {\r\n            switch (piecesBlack.get(i).getType()) {\r\n                case Pawn -> pawnsBlack++;\r\n                case Rook -> rooksBlack++;\r\n                case Knight -> knightsBlack++;\r\n                case Bishop -> bishopsBlack++;\r\n                case Queen -> queenBlack = true;\r\n                case King -> kingBlack = true;\r\n            }\r\n        }\r\n\r\n        String messageWhite = String.format(\"<html>Username: %s<br>\", \"ime\") +\r\n                String.format(\"ELO: %s<br>\", \"elo\") +\r\n                String.format(\"CurrentPiecesCount: %d<br>\", piecesWhite.size()) +\r\n                String.format(\"Pawns: %d<br>\", pawnsWhite) +\r\n                String.format(\"Rooks (Castles): %d<br>\", rooksWhite) +\r\n                String.format(\"Knights: %d<br>\", knightsWhite) +\r\n                String.format(\"Bishops: %d<br>\", bishopsWhite) +\r\n                String.format(\"Have Queen: %s<br>\", queenWhite ? \"true\" : \"false\") +\r\n                String.format(\"Have King: %s</html>\", kingWhite ? \"true\" : \"false\");\r\n\r\n        String messageBlack = String.format(\"<html>Username: %s<br>\", \"ime\") +\r\n                String.format(\"ELO: %s<br>\", \"elo\") +\r\n                String.format(\"CurrentPiecesCount: %d<br>\", piecesBlack.size()) +\r\n                String.format(\"Pawns: %d<br>\", pawnsBlack) +\r\n                String.format(\"Rooks (Castles): %d<br>\", rooksBlack) +\r\n                String.format(\"Knights: %d<br>\", knightsBlack) +\r\n                String.format(\"Bishops: %d<br>\", bishopsBlack) +\r\n                String.format(\"Have Queen: %s<br>\", queenBlack ? \"true\" : \"false\") +\r\n                String.format(\"Have King: %s</html>\", kingBlack ? \"true\" : \"false\");\r\n\r\n        playerLabel.setText(messageWhite);\r\n        opponentLabel.setText(messageBlack);\r\n    }\r\n\r\n    public void updateMovesTable(Piece piece) {\r\n        if (Board.instance.moves.size() > 0) {\r\n            if (movesTableModel.getRowCount() <= 10) {\r\n                String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);\r\n                util.Console.message(moveString);\r\n                movesTableModel.addRow(new Object[] { moveString });\r\n            }\r\n            else {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private JPanel playerPanel, opponentPanel;\r\n    private JLabel playerLabel, opponentLabel;\r\n    private DefaultTableModel movesTableModel;\r\n\r\n    private void createInfo() {\r\n        movesTableModel = new DefaultTableModel(new Object[] { \"Column 1\" }, 0) {\r\n            @Override\r\n            public boolean isCellEditable(int row, int column) { return false; }\r\n        };\r\n        JTable movesPanel = new JTable(movesTableModel);\r\n        movesPanel.setName(\"moves_panel\");\r\n        movesPanel.setLayout(new BoxLayout(movesPanel, BoxLayout.Y_AXIS));\r\n        movesPanel.setTableHeader(null);\r\n        movesPanel.setBounds(823, 475, 251, 240);\r\n        JPanel panel = new JPanel();\r\n        panel.add(movesPanel);\r\n        panel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 5));\r\n        panel.setBounds(818, 470, 260, 250);\r\n        add(panel);\r\n\r\n        Board.instance.onPieceMoved.add(this::updateMovesTable);\r\n\r\n        JPanel timerPanel = new JPanel();\r\n        timerPanel.setName(\"timer_panel\");\r\n        Border timerBorder = BorderFactory.createLineBorder(Color.GRAY, 5);\r\n        timerPanel.setBorder(timerBorder);\r\n        timerPanel.setLayout(new BoxLayout(timerPanel, BoxLayout.Y_AXIS));\r\n        timerPanel.setBounds(818, 725, 260, 85);\r\n\r\n        playerPanel = getPlayerInfoPanel(true);\r\n        opponentPanel = getPlayerInfoPanel(false);\r\n\r\n        playerPanel.setBounds(818, 10, 260, 225);\r\n        playerPanel.setName(\"player_panel\");\r\n        opponentPanel.setBounds(818, 240, 260, 225);\r\n        opponentPanel.setName(\"opponent_panel\");\r\n\r\n        playerLabel = (JLabel) playerPanel.getComponents()[1];\r\n        opponentLabel = (JLabel) opponentPanel.getComponents()[1];\r\n\r\n        updateInfoTable(null);\r\n        Board.instance.onPieceMoved.add(this::updateInfoTable);\r\n\r\n        add(playerPanel);\r\n        add(opponentPanel);\r\n        add(movesPanel);\r\n        add(timerPanel);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/Game.java b/src/gui/Game.java
--- a/src/gui/Game.java	(revision 606d0700e1dbe13a090dbad4662252c85e733335)
+++ b/src/gui/Game.java	(date 1685607135603)
@@ -24,6 +24,7 @@
         createInfo();
     }
 
+        //comment
     gui.images.Field[][] fields = null;
 
     public gui.images.Field[][] getFields() {
@@ -134,15 +135,13 @@
     }
 
     public void updateMovesTable(Piece piece) {
-        if (Board.instance.moves.size() > 0) {
-            if (movesTableModel.getRowCount() <= 10) {
-                String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);
-                util.Console.message(moveString);
-                movesTableModel.addRow(new Object[] { moveString });
-            }
-            else {
+        if (movesTableModel.getRowCount() <= 10) {
+            String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);
+            util.Console.message(moveString);
+            movesTableModel.addRow(new Object[] { moveString });
+        }
+        else {
 
-            }
         }
     }
 
Index: src/game/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game;\r\n\r\nimport socket.LocalClient;\r\nimport socket.packages.Packet;\r\nimport util.Array;\r\nimport util.Vector;\r\nimport util.events.ArgEvent;\r\n\r\npublic class Board {\r\n\r\n    public static final Board instance = new Board();\r\n\r\n    public static final int SIZE = 8;\r\n    public static final int HALF_SIZE = SIZE / 2;\r\n    public static final int LAST = SIZE - 1;\r\n\r\n    private Piece[][] pieces = new Piece[SIZE][SIZE];\r\n\r\n    private Piece[][] getPiecesCopy() {\r\n        Piece[][] copy = new Piece[SIZE][SIZE];\r\n        for (int i = 0; i < SIZE; i++) {\r\n            for (int j = 0; j < SIZE; j++) {\r\n                Piece piece = pieces[i][j];\r\n                copy[i][j] = new Piece(\r\n                        piece.getColor(), piece.getType(), new Vector(i, j)\r\n                );\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // TODO: resi sah mat exception\r\n\r\n    public Board(){}\r\n    public Board(Board other) {\r\n        this.pieces = other.getPiecesCopy();\r\n        this.updatePieces();\r\n    }\r\n\r\n    private final util.Array<Piece> whitePieces = new Array<>();\r\n    private final util.Array<Piece> blackPieces = new Array<>();\r\n    private final util.Array<Piece> allPieces = new Array<>();\r\n\r\n    public void updatePieces() {\r\n        allPieces.clear();\r\n        whitePieces.clear();\r\n        blackPieces.clear();\r\n        for (int i = 0; i < SIZE; i++)\r\n            for (int j = 0; j < SIZE; j++) {\r\n                if (isNull(i, j))\r\n                    continue;\r\n\r\n                Piece tempPiece = pieces[i][j];\r\n                allPieces.add(tempPiece);\r\n\r\n                if (tempPiece.isColor(Piece.Color.White))\r\n                    whitePieces.add(tempPiece);\r\n                else\r\n                    blackPieces.add(tempPiece);\r\n            }\r\n    }\r\n\r\n    public void clear() {\r\n        for (int i = 0; i < SIZE; i++) {\r\n            for (int j = 0; j < SIZE; j++) {\r\n                pieces[i][j] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void addPiece(final Piece newPiece) {\r\n        final Vector position = newPiece.getPosition();\r\n        pieces[position.X][position.Y] = newPiece;\r\n\r\n        allPieces.add(newPiece);\r\n\r\n        if (newPiece.isColor(Piece.Color.White))\r\n            whitePieces.add(newPiece);\r\n        else\r\n            blackPieces.add(newPiece);\r\n\r\n    }\r\n\r\n    public void reset() {\r\n        clear();\r\n\r\n        final int[] order = {1, 2, 3, 4, 5, 3, 2, 1};\r\n        for (int i = 0; i < SIZE; i++) {\r\n            // Setup white pieces\r\n            addPiece(new Piece(Piece.Color.White, Piece.Type.fromCode(order[i]), new util.Vector(0, i)));\r\n            addPiece(new Piece(Piece.Color.White, Piece.Type.Pawn, new util.Vector(1, i)));\r\n\r\n            // Setup black pieces\r\n            addPiece(new Piece(Piece.Color.Black, Piece.Type.fromCode(order[i]), new util.Vector(LAST, i)));\r\n            addPiece(new Piece(Piece.Color.Black, Piece.Type.Pawn, new util.Vector(LAST - 1, i)));\r\n        }\r\n    }\r\n\r\n    private void onPieceEaten(Piece piece) {\r\n        if (piece.isColor(Piece.Color.White)) {\r\n            if (whitePieces.contains(piece))\r\n                whitePieces.remove(piece);\r\n        } else {\r\n            if (blackPieces.contains(piece))\r\n                blackPieces.remove(piece);\r\n        }\r\n        allPieces.remove(piece);\r\n\r\n        onPieceEaten.run(piece);\r\n    }\r\n\r\n    public Piece get(final int x, final int y) {\r\n        return pieces[x][y];\r\n    }\r\n\r\n    public Piece get(final Vector position) {\r\n        return get(position.X, position.Y);\r\n    }\r\n\r\n    public Piece get(final Piece.Color color, final Piece.Type type, final int offset) {\r\n        int off = offset;\r\n\r\n        util.Array<Piece> currentPieces = color == Piece.Color.White ? getWhitePieces() : getBlackPieces();\r\n\r\n        for (int i = 0; i < currentPieces.size(); i++) {\r\n            if (currentPieces.get(i).isType(type)) {\r\n                if (off <= 0)\r\n                    return currentPieces.get(i);\r\n                else\r\n                    off--;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public Piece get(final Piece.Color color, final Piece.Type type) {\r\n        return get(color, type, 0);\r\n    }\r\n\r\n    public util.Array<Piece> getWhitePieces() {\r\n        return whitePieces;\r\n    }\r\n\r\n    public util.Array<Piece> getBlackPieces() {\r\n        return blackPieces;\r\n    }\r\n\r\n    public util.Array<Piece> getAllPieces() {\r\n        return allPieces;\r\n    }\r\n\r\n    public boolean isNull(final int x, final int y) {\r\n        return get(x, y) == null;\r\n    }\r\n\r\n    public boolean isNull(final Vector position) {\r\n        return isNull(position.X, position.Y);\r\n    }\r\n\r\n    public boolean inPath(final int x, final int y, final int dx, final int dy, int ddx, int ddy) {\r\n        Vector i = new Vector(x, y);\r\n        i.add(ddx, ddy);\r\n\r\n        while (i.X != dx || i.Y != dy) {\r\n            if (!isNull(i))\r\n                return false;\r\n\r\n            i.add(ddx, ddy);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public boolean inPath(final Vector from, final int dx, final int dy, int ddx, int ddy) {\r\n        return inPath(from.X, from.Y, dx, dy, ddx, ddy);\r\n    }\r\n\r\n    public boolean inPath(final Vector from, final Vector to, int ddx, int ddy) {\r\n        return inPath(from, to.X, to.Y, ddx, ddy);\r\n    }\r\n\r\n    public boolean inPath(final Vector from, final Vector to, Vector step) {\r\n        return inPath(from, to, step.X, step.Y);\r\n    }\r\n\r\n    public util.events.ArgEvent<Piece> onPieceEaten = new ArgEvent<>();\r\n    public util.events.ArgEvent<Move> onPieceMove = new ArgEvent<>();\r\n    public util.events.ArgEvent<Piece> onPieceMoved = new ArgEvent<>();\r\n\r\n    public final util.Array<String> moves = new Array<>();\r\n\r\n    private final String[] labels = {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"};\r\n\r\n    private String convertVector(final Vector vector) {\r\n        return (vector.X + 1) + \"\" + labels[vector.Y];\r\n    }\r\n\r\n    private String convertMove(final Move move) {\r\n        return convertVector(move.getFrom()) + \" : \" + convertVector(move.getTo());\r\n    }\r\n\r\n    public void move(final Vector from, final Vector to) {\r\n        Move move = new Move(from, to);\r\n        onPieceMove.run(move);\r\n\r\n        Piece temp = get(from);\r\n\r\n        if (!isNull(to))\r\n            onPieceEaten(get(to));\r\n\r\n        pieces[from.X][from.Y] = null;\r\n        pieces[to.X][to.Y] = temp;\r\n\r\n        temp.updatePosition(to);\r\n        onPieceMoved.run(temp);\r\n\r\n        moves.add(convertMove(move));\r\n    }\r\n\r\n    public void networkMove(final Vector from, final Vector to) {\r\n        Move move = new Move(from, to);\r\n\r\n        //Send move over network\r\n        LocalClient.instance.send(new Packet(move.pack()));\r\n\r\n        move(move);\r\n    }\r\n\r\n    public void move(final Move move) {\r\n        move(move.getFrom(), move.getTo());\r\n    }\r\n\r\n    public void networkMove(final Move move) {\r\n        networkMove(move.getFrom(), move.getTo());\r\n    }\r\n\r\n    public boolean tryMove(final Vector from, final Vector to) {\r\n        Piece temp = get(from);\r\n\r\n        if (temp.canMove(to)) {\r\n            networkMove(from, to);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public boolean tryMove(final Move move) {\r\n        return tryMove(move.getFrom(), move.getTo());\r\n    }\r\n\r\n    public boolean isCheck(Piece.Color color) {\r\n        Piece king = get(color, Piece.Type.King);\r\n\r\n        util.Array<Piece> opponentPieces = color == Piece.Color.White ? blackPieces : whitePieces;\r\n        for (int i = 0; i < opponentPieces.size(); i++) {\r\n            if (opponentPieces.get(i).canMove(king.getPosition()))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public boolean isCheckmate(Piece.Color color) {\r\n\r\n        if (!isCheck(color))\r\n            return false;\r\n\r\n        util.Array<Piece> tempPieces = color == Piece.Color.White ? getWhitePieces() : getBlackPieces();\r\n        util.Array<Move> legalMoves = new Array<>();\r\n        tempPieces.foreach((Piece piece) -> {\r\n            util.Array<Vector> moves = piece.getMoves();\r\n            moves.foreach((Vector destination) -> {\r\n                legalMoves.add(new Move(piece.getPosition(), destination));\r\n            });\r\n        });\r\n\r\n        for(int i =0;i<legalMoves.size();i++) {\r\n            Move legalMove = legalMoves.get(i);\r\n            Board tempBoard = new Board(this);\r\n            tempBoard.move(legalMove);\r\n            if (!tempBoard.isCheck(color))\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game/Board.java b/src/game/Board.java
--- a/src/game/Board.java	(revision 606d0700e1dbe13a090dbad4662252c85e733335)
+++ b/src/game/Board.java	(date 1685606960660)
@@ -196,7 +196,7 @@
     }
 
     private String convertMove(final Move move) {
-        return convertVector(move.getFrom()) + " : " + convertVector(move.getTo());
+        return (moves.size() + 1) + " - " + convertVector(move.getFrom()) + " : " + convertVector(move.getTo());
     }
 
     public void move(final Vector from, final Vector to) {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_20\" default=\"true\" project-jdk-name=\"openjdk-20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 606d0700e1dbe13a090dbad4662252c85e733335)
+++ b/.idea/misc.xml	(date 1685606505101)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="openjdk-20" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-20" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"Main Fix\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/audio/AudioManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/audio/AudioManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/game/GameManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/game/GameManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gui/GuiManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui/GuiManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gui/images/Image.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui/images/Image.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/NetworkManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/NetworkManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/RoomManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/RoomManager.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QMoiVsCVgGjgSev7aJ1d5PId8K\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"jdk.selected.JAVA_MODULE\": \"12\",\r\n    \"last_opened_file_path\": \"C:/Users/Aleksa/Desktop/CS120-IspitnaPitanja.docx\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Aleksa\\IdeaProjects\\OnlineChess\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"OnlineChess\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"\" />\r\n      <created>1685172942860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1685172942860</updated>\r\n      <workItem from=\"1685305074441\" duration=\"15046000\" />\r\n      <workItem from=\"1685364113165\" duration=\"384000\" />\r\n      <workItem from=\"1685364512410\" duration=\"58000\" />\r\n      <workItem from=\"1685364581139\" duration=\"3526000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Setup\">\r\n      <created>1685172992366</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685172992366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Server/Client setup\">\r\n      <created>1685269788259</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685269788259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Server/Client setup\">\r\n      <created>1685274797705</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685274797705</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Server/Client setup\">\r\n      <created>1685275832983</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275832983</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Server/Client setup\">\r\n      <created>1685275988816</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275988816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Quick Fix\">\r\n      <created>1685276024887</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685276024887</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Quick Fix\">\r\n      <created>1685277126581</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685277126581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Foreach in Array\">\r\n      <created>1685371437023</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685371437023</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Foreach in Array\">\r\n      <created>1685379051695</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685379051695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Foreach in Array\">\r\n      <created>1685380334047</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685380334047</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Game GUI\">\r\n      <created>1685384925452</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685384925452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Game GUI\">\r\n      <created>1685386881575</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685386881575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Board Initialization\">\r\n      <created>1685390526513</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685390526513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Pieces Move\">\r\n      <created>1685392740090</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685392740090</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"QuickFix\">\r\n      <created>1685395325023</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395325024</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"QuickFix\">\r\n      <created>1685395942872</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395942872</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"QuickFix\">\r\n      <created>1685435834634</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685435834634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Fixed\">\r\n      <created>1685436366774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685436366774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Added Fixed Movement\">\r\n      <created>1685458352412</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685458352412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Added Fixed Movement\">\r\n      <created>1685514249595</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685514249595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Main Fix\">\r\n      <created>1685601250344</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685601250344</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"22\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Setup\" />\r\n    <MESSAGE value=\"Server/Client setup\" />\r\n    <MESSAGE value=\"Quick Fix\" />\r\n    <MESSAGE value=\"Editing users\" />\r\n    <MESSAGE value=\"Foreach in Array\" />\r\n    <MESSAGE value=\"Game GUI\" />\r\n    <MESSAGE value=\"Board Initialization\" />\r\n    <MESSAGE value=\"Pieces Move\" />\r\n    <MESSAGE value=\"QuickFix\" />\r\n    <MESSAGE value=\"Fixed\" />\r\n    <MESSAGE value=\"Added Fixed Movement\" />\r\n    <MESSAGE value=\"Main Fix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Main Fix\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 606d0700e1dbe13a090dbad4662252c85e733335)
+++ b/.idea/workspace.xml	(date 1685607135714)
@@ -4,15 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0026f5f2-a006-4a9c-9f3f-a83d0059bec4" name="Changes" comment="Main Fix">
+    <list default="true" id="0026f5f2-a006-4a9c-9f3f-a83d0059bec4" name="Changes" comment="Fixed">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_1_2023_6_51_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_1_2023_6_51_AM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/audio/AudioManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/audio/AudioManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/game/GameManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/GameManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gui/GuiManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/GuiManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gui/images/Image.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/images/Image.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/NetworkManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/NetworkManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/RoomManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/RoomManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/game/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/Board.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/gui/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/Game.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -38,35 +35,36 @@
   </component>
   <component name="ProjectId" id="2QMoiVsCVgGjgSev7aJ1d5PId8K" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <OptionsSetting value="false" id="Update" />
     <ConfirmationsSetting value="2" id="Add" />
   </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "Downloaded.Files.Path.Enabled": "false",
-    "Repository.Attach.Annotations": "false",
-    "Repository.Attach.JavaDocs": "false",
-    "Repository.Attach.Sources": "false",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "master",
-    "ignore.virus.scanning.warn.message": "true",
-    "jdk.selected.JAVA_MODULE": "12",
-    "last_opened_file_path": "C:/Users/Aleksa/Desktop/CS120-IspitnaPitanja.docx",
-    "onboarding.tips.debug.path": "C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java",
-    "project.structure.last.edited": "Project",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "run.code.analysis.last.selected.profile": "pProject Default",
-    "settings.editor.selected.configurable": "preferences.lookFeel"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;12&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Aleksa/Desktop/CS120-IspitnaPitanja.docx&quot;,
+    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Aleksa\IdeaProjects\OnlineChess\src" />
@@ -93,6 +91,7 @@
       <workItem from="1685364113165" duration="384000" />
       <workItem from="1685364512410" duration="58000" />
       <workItem from="1685364581139" duration="3526000" />
+      <workItem from="1685606595326" duration="536000" />
     </task>
     <task id="LOCAL-00001" summary="Setup">
       <created>1685172992366</created>
@@ -274,4 +273,7 @@
     <MESSAGE value="Main Fix" />
     <option name="LAST_COMMIT_MESSAGE" value="Main Fix" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/OnlineChess$Main.ic" NAME="Main Coverage Results" MODIFIED="1685403185032" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
