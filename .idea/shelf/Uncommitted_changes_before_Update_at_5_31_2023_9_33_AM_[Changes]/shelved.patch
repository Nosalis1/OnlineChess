Index: src/gui/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport game.Board;\r\nimport game.Piece;\r\nimport gui.images.Field;\r\nimport util.Array;\r\nimport util.Vector;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport java.awt.*;\r\n\r\npublic class Game extends Window {\r\n    public static final Game instance = new Game();\r\n\r\n    public Game() {\r\n        super(\"Game\");\r\n        super.setSize(1100, 860);\r\n        super.setLayout(null);\r\n        super.setLocationRelativeTo(null);\r\n\r\n        createTable();\r\n        createInfo();\r\n    }\r\n\r\n    gui.images.Field[][] fields = null;\r\n\r\n    public gui.images.Field[][] getFields() {\r\n        return this.fields;\r\n    }\r\n\r\n    public gui.images.Field getField(final int x,final int y) {\r\n        return this.fields[x][y];\r\n    }\r\n\r\n    public gui.images.Field getField(final Vector at) {\r\n        return getField(at.X, at.Y);\r\n    }\r\n\r\n    private void createTable() {\r\n        JPanel tablePanel = new JPanel();\r\n\r\n        tablePanel.setLayout(new GridLayout(Board.SIZE, Board.SIZE));\r\n        tablePanel.setBounds(10, 10, 800, 800);\r\n        tablePanel.setName(\"table\");\r\n\r\n        fields = new Field[Board.SIZE][Board.SIZE];\r\n\r\n        boolean ws = false;\r\n        for (int i = 0; i < Board.SIZE; i++) {\r\n            for (int j = 0; j < Board.SIZE; j++) {\r\n                fields[i][j] = new Field(new Vector(i, j), new Vector(100, 100), ws = !ws);\r\n                tablePanel.add(fields[i][j]);\r\n            }\r\n            ws = !ws;\r\n        }\r\n\r\n        add(tablePanel);\r\n    }\r\n\r\n    public void updateInfoBoards() {\r\n\r\n    }\r\n\r\n    private JPanel getPlayerInfoPanel(boolean isWhite, Color borderColor) {\r\n        util.Array<Piece> pieces = isWhite ? Board.getWhitePieces() : Board.getBlackPieces();\r\n        int pawns = 0,\r\n            rooks = 0,\r\n            knights = 0,\r\n            bishops = 0;\r\n        boolean queen = false,\r\n                king = false;\r\n\r\n        for (int i=0; i<pieces.size(); i++) {\r\n            Piece piece = pieces.get(i);\r\n            if (piece != null)\r\n                switch (piece.getType()) {\r\n                    case Pawn -> pawns++;\r\n                    case Rook -> rooks++;\r\n                    case Knight -> knights++;\r\n                    case Bishop -> bishops++;\r\n                    case Queen -> queen = true;\r\n                    case King -> king = true;\r\n                }\r\n        }\r\n\r\n        JPanel panel = new JPanel();\r\n        panel.setBorder(BorderFactory.createLineBorder(borderColor, 5));\r\n        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));\r\n\r\n        JLabel labelPlayer = new JLabel(\"Player info\", SwingConstants.CENTER);\r\n        panel.setPreferredSize(new Dimension(260, labelPlayer.getPreferredSize().height));\r\n        panel.setFont(labelPlayer.getFont().deriveFont(Font.BOLD, 20F));\r\n        panel.add(labelPlayer);\r\n        panel.add(new JLabel(String.format(\"Username: %s\", \"ime\")));\r\n        panel.add(new JLabel(String.format(\"ELO: %s\", \"elo\")));\r\n        panel.add(new JLabel(String.format(\"CurrentPiecesCount: %d\", pieces.size())));\r\n        panel.add(new JLabel(String.format(\"Pawns: %d\", pawns)));\r\n        panel.add(new JLabel(String.format(\"Rooks (Castles): %d\", rooks)));\r\n        panel.add(new JLabel(String.format(\"Knights: %d\", knights)));\r\n        panel.add(new JLabel(String.format(\"Bishops: %d\", bishops)));\r\n        panel.add(new JLabel(String.format(\"Have Queen: %s\", queen ? \"true\" : \"false\")));\r\n        panel.add(new JLabel(String.format(\"Have King: %s\", king ? \"true\" : \"false\")));\r\n        return panel;\r\n    }\r\n\r\n    private void createInfo() {\r\n        JPanel movesPanel = new JPanel();\r\n        movesPanel.setName(\"moves_panel\");\r\n        Border movesBorder = BorderFactory.createLineBorder(Color.GRAY, 5);\r\n        movesPanel.setBorder(movesBorder);\r\n        movesPanel.setLayout(new BoxLayout(movesPanel, BoxLayout.Y_AXIS));\r\n        movesPanel.setBounds(820, 470, 260, 170);\r\n\r\n        JPanel timerPanel = new JPanel();\r\n        timerPanel.setName(\"timer_panel\");\r\n        Border timerBorder = BorderFactory.createLineBorder(Color.GRAY, 5);\r\n        timerPanel.setBorder(timerBorder);\r\n        timerPanel.setLayout(new BoxLayout(timerPanel, BoxLayout.Y_AXIS));\r\n        timerPanel.setBounds(820, 645, 260, 165);\r\n\r\n        JPanel playerPanel = getPlayerInfoPanel(true, Color.LIGHT_GRAY),\r\n               opponentPanel = getPlayerInfoPanel(false, Color.GRAY);\r\n        playerPanel.setBounds(820, 10, 260, 225);\r\n        playerPanel.setName(\"player_panel\");\r\n        opponentPanel.setBounds(820, 240, 260, 225);\r\n        opponentPanel.setName(\"opponent_panel\");\r\n\r\n        util.Array<JPanel> panels = new Array<>();\r\n        panels.replace(new JPanel[] {playerPanel, opponentPanel, movesPanel, timerPanel});\r\n\r\n        util.Console.message(panels.get(0).getName());\r\n        util.Console.message(panels.get(1).getName());\r\n        util.Console.message(panels.get(2).getName());\r\n        util.Console.message(panels.get(3).getName());\r\n\r\n        add(\"playerPanel\", playerPanel);\r\n        add(\"opponentPanel\", opponentPanel);\r\n        add(\"movesPanel\", movesPanel);\r\n        add(\"timerPanel\", timerPanel);\r\n\r\n        Component[] components = getComponents();\r\n        util.Console.message(components[0].getSize().height);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/Game.java b/src/gui/Game.java
--- a/src/gui/Game.java	(revision 67db08ebf08e347ed3c781e11b102a5298358d97)
+++ b/src/gui/Game.java	(date 1685518398327)
@@ -1,6 +1,8 @@
 package gui;
 
+import com.sun.tools.jconsole.JConsoleContext;
 import game.Board;
+import game.GameManager;
 import game.Piece;
 import gui.images.Field;
 import util.Array;
@@ -11,7 +13,7 @@
 import java.awt.*;
 
 public class Game extends Window {
-    public static final Game instance = new Game();
+    public static Game instance;
 
     public Game() {
         super("Game");
@@ -23,6 +25,11 @@
         createInfo();
     }
 
+    public static void initialize() {
+        if (instance == null)
+            instance = new Game();
+    }
+
     gui.images.Field[][] fields = null;
 
     public gui.images.Field[][] getFields() {
@@ -62,48 +69,75 @@
 
     }
 
-    private JPanel getPlayerInfoPanel(boolean isWhite, Color borderColor) {
-        util.Array<Piece> pieces = isWhite ? Board.getWhitePieces() : Board.getBlackPieces();
-        int pawns = 0,
-            rooks = 0,
-            knights = 0,
-            bishops = 0;
-        boolean queen = false,
-                king = false;
-
-        for (int i=0; i<pieces.size(); i++) {
-            Piece piece = pieces.get(i);
-            if (piece != null)
-                switch (piece.getType()) {
-                    case Pawn -> pawns++;
-                    case Rook -> rooks++;
-                    case Knight -> knights++;
-                    case Bishop -> bishops++;
-                    case Queen -> queen = true;
-                    case King -> king = true;
-                }
-        }
-
+    private JPanel getPlayerInfoPanel(boolean isWhite) {
         JPanel panel = new JPanel();
-        panel.setBorder(BorderFactory.createLineBorder(borderColor, 5));
+        panel.setBorder(BorderFactory.createLineBorder(isWhite ? Color.LIGHT_GRAY : Color.GRAY, 5));
         panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
 
         JLabel labelPlayer = new JLabel("Player info", SwingConstants.CENTER);
         panel.setPreferredSize(new Dimension(260, labelPlayer.getPreferredSize().height));
         panel.setFont(labelPlayer.getFont().deriveFont(Font.BOLD, 20F));
         panel.add(labelPlayer);
-        panel.add(new JLabel(String.format("Username: %s", "ime")));
-        panel.add(new JLabel(String.format("ELO: %s", "elo")));
-        panel.add(new JLabel(String.format("CurrentPiecesCount: %d", pieces.size())));
-        panel.add(new JLabel(String.format("Pawns: %d", pawns)));
-        panel.add(new JLabel(String.format("Rooks (Castles): %d", rooks)));
-        panel.add(new JLabel(String.format("Knights: %d", knights)));
-        panel.add(new JLabel(String.format("Bishops: %d", bishops)));
-        panel.add(new JLabel(String.format("Have Queen: %s", queen ? "true" : "false")));
-        panel.add(new JLabel(String.format("Have King: %s", king ? "true" : "false")));
+        panel.add(new JLabel());
         return panel;
     }
 
+    public void updateInfoTable(Piece piece) {
+        int pawnsWhite = 0, pawnsBlack = 0,
+            rooksWhite = 0, rooksBlack = 0,
+            knightsWhite = 0, knightsBlack = 0,
+            bishopsWhite = 0, bishopsBlack = 0,
+            queenWhite = 0, queenBlack = 0,
+            kingWhite = 0, kingBlack = 0;
+
+        util.Array<Piece> piecesWhite = Board.getWhitePieces(),
+                          piecesBlack = Board.getBlackPieces();
+        for (int i=0; i<16; i++) {
+            switch (piecesWhite.get(i).getType()) {
+                case Pawn -> pawnsWhite++;
+                case Rook -> rooksWhite++;
+                case Knight -> knightsWhite++;
+                case Bishop -> bishopsWhite++;
+                case Queen -> queenWhite = 1;
+                case King -> kingWhite = 1;
+            }
+            switch (piecesBlack.get(i).getType()) {
+                case Pawn -> pawnsBlack++;
+                case Rook -> rooksBlack++;
+                case Knight -> knightsBlack++;
+                case Bishop -> bishopsBlack++;
+                case Queen -> queenBlack = 1;
+                case King -> kingBlack = 1;
+            }
+        }
+
+        String messageWhite = String.format("<html>Username: %s<br>", "ime") +
+                String.format("ELO: %s<br>", "elo") +
+                String.format("CurrentPiecesCount: %d<br>", piecesWhite.size()) +
+                String.format("Pawns: %d<br>", pawnsWhite) +
+                String.format("Rooks (Castles): %d<br>", rooksWhite) +
+                String.format("Knights: %d<br>", knightsWhite) +
+                String.format("Bishops: %d<br>", bishopsWhite) +
+                String.format("Have Queen: %s<br>", queenWhite == 1 ? "true" : "false") +
+                String.format("Have King: %s</html>", kingWhite == 1 ? "true" : "false");
+
+        String messageBlack = String.format("<html>Username: %s<br>", "ime") +
+                String.format("ELO: %s<br>", "elo") +
+                String.format("CurrentPiecesCount: %d<br>", piecesBlack.size()) +
+                String.format("Pawns: %d<br>", pawnsBlack) +
+                String.format("Rooks (Castles): %d<br>", rooksBlack) +
+                String.format("Knights: %d<br>", knightsBlack) +
+                String.format("Bishops: %d<br>", bishopsBlack) +
+                String.format("Have Queen: %s<br>", queenBlack == 1 ? "true" : "false") +
+                String.format("Have King: %s</html>", kingBlack == 1 ? "true" : "false");
+
+        playerLabel.setText(messageWhite);
+        opponentLabel.setText(messageBlack);
+    }
+
+    private JLabel playerLabel;
+    private JLabel opponentLabel;
+
     private void createInfo() {
         JPanel movesPanel = new JPanel();
         movesPanel.setName("moves_panel");
@@ -119,25 +153,23 @@
         timerPanel.setLayout(new BoxLayout(timerPanel, BoxLayout.Y_AXIS));
         timerPanel.setBounds(820, 645, 260, 165);
 
-        JPanel playerPanel = getPlayerInfoPanel(true, Color.LIGHT_GRAY),
-               opponentPanel = getPlayerInfoPanel(false, Color.GRAY);
+        JPanel playerPanel = getPlayerInfoPanel(true),
+               opponentPanel = getPlayerInfoPanel(false);
         playerPanel.setBounds(820, 10, 260, 225);
         playerPanel.setName("player_panel");
         opponentPanel.setBounds(820, 240, 260, 225);
         opponentPanel.setName("opponent_panel");
 
-        util.Array<JPanel> panels = new Array<>();
-        panels.replace(new JPanel[] {playerPanel, opponentPanel, movesPanel, timerPanel});
+        Board.instance.(this::updateInfoBoards)
+        updateInfoBoards();
 
-        util.Console.message(panels.get(0).getName());
-        util.Console.message(panels.get(1).getName());
-        util.Console.message(panels.get(2).getName());
-        util.Console.message(panels.get(3).getName());
+        System.out.println(playerLabel.getText());
+        System.out.println(opponentLabel.getText());
 
-        add("playerPanel", playerPanel);
-        add("opponentPanel", opponentPanel);
-        add("movesPanel", movesPanel);
-        add("timerPanel", timerPanel);
+        add(playerPanel);
+        add(opponentPanel);
+        add(movesPanel);
+        add(timerPanel);
 
         Component[] components = getComponents();
         util.Console.message(components[0].getSize().height);
Index: src/game/GameManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game;\r\n\r\nimport audio.AudioManager;\r\nimport gui.ColorGradient;\r\nimport gui.Game;\r\nimport gui.images.Field;\r\nimport gui.images.Image;\r\nimport socket.LocalClient;\r\nimport socket.packages.Packet;\r\nimport util.Array;\r\nimport util.Console;\r\nimport util.Vector;\r\n\r\npublic class GameManager {\r\n    public static GameManager instance;\r\n\r\n    public static void initialize() {\r\n        if (instance == null)\r\n            instance = new GameManager();\r\n    }\r\n\r\n    public GameManager() {\r\n        Field.onFieldClicked.add(this::onFieldClicked);\r\n\r\n        Board.onPieceEaten.add(this::onPieceEaten);\r\n        Board.onPieceMoved.add(this::onPieceMoved);\r\n        Board.onPieceMove.add(this::onPieceMove);\r\n\r\n        Board.reset();\r\n        updateAll();\r\n    }\r\n\r\n    public void updateAll() {\r\n        util.Array<Piece> allPieces = Board.getAllPieces();\r\n\r\n        allPieces.foreach((Piece piece) -> {\r\n            util.Vector at = piece.getPosition();\r\n\r\n            Game.instance.getField(at).setImage(Image.IMAGES[piece.getColorCode()][piece.getTypeCode() - 1]);\r\n        });\r\n    }\r\n\r\n    private void onPieceEaten(Piece piece) {\r\n        util.Vector at = piece.getPosition();\r\n\r\n        Game.instance.getField(at).setImage(null);\r\n    }\r\n\r\n    private void onPieceMoved(Piece piece) {\r\n        util.Vector at = piece.getPosition();\r\n\r\n        Game.instance.getField(at).setImage(Image.IMAGES[piece.getColorCode()][piece.getTypeCode() - 1]);\r\n\r\n        nextTurn();\r\n        System.out.println(\"WHITE TURN : \" + isWhiteTurn());\r\n    }\r\n\r\n    private void onPieceMove(Move move) {\r\n        util.Vector at = move.getFrom();\r\n        Game.instance.getField(at).setImage(null);\r\n    }\r\n\r\n    private final Array<Field> currentHighlights = new Array<>();\r\n\r\n    private void resetHighlights() {\r\n        currentHighlights.foreach((Field field) -> {\r\n            field.setColor(ColorGradient.FIELD.getColor(field.isGradient()));\r\n        });\r\n        currentHighlights.clear();\r\n    }\r\n\r\n    private void setSelected(Vector at) {\r\n        resetHighlights();\r\n\r\n        Field temp = Game.instance.getField(at);\r\n        temp.setColor(ColorGradient.HIGHLIGHT.getColor(temp.isGradient()));\r\n        currentHighlights.add(temp);\r\n\r\n        setMoves(at);\r\n    }\r\n\r\n    private void setMoves(Vector at) {\r\n        Piece piece = Board.get(at);\r\n        if (piece == null)\r\n            return;\r\n\r\n        Array<Vector> moves = piece.getMoves();\r\n\r\n        moves.foreach((Vector position) -> {\r\n            Field temp = Game.instance.getField(position);\r\n\r\n            temp.setColor(Board.isNull(position) ? ColorGradient.MOVE.getColor(temp.isGradient()) : ColorGradient.ATTACK.getColor(temp.isGradient()));\r\n            currentHighlights.add(temp);\r\n        });\r\n    }\r\n\r\n    private boolean white = true;\r\n\r\n    public void changeColor() {\r\n        this.white = !this.white;\r\n    }\r\n\r\n    public boolean isWhite() {\r\n        return this.white;\r\n    }\r\n\r\n    private boolean whiteTurn = true;\r\n\r\n    public boolean isWhiteTurn() {\r\n        return this.whiteTurn;\r\n    }\r\n\r\n    public void nextTurn() {\r\n        whiteTurn = !whiteTurn;\r\n    }\r\n\r\n    public boolean canPlay() {\r\n        return (isWhite() && isWhiteTurn()) || (!isWhite() && !isWhiteTurn());\r\n    }\r\n\r\n    // TODO: add getUsername\r\n\r\n    Vector selected;\r\n\r\n    private void handleClicked(Vector at) {\r\n        if (!canPlay())\r\n            return;\r\n        if (selected == null && (!Board.isNull(at) && Board.get(at).isColor(isWhite() ? Piece.Color.White : Piece.Color.Black))) {\r\n            selected = at;\r\n            setSelected(at);\r\n        } else if (selected == at) {\r\n            selected = null;\r\n            resetHighlights();\r\n        } else if (selected != null) {\r\n            Board.tryMove(selected, at);\r\n            selected = null;\r\n            resetHighlights();\r\n        }\r\n    }\r\n\r\n    private void onFieldClicked(Vector at) {\r\n        handleClicked(at);\r\n    }\r\n\r\n    Move networkMove = new Move(Vector.ZERO, Vector.ZERO);\r\n\r\n    public void handleNetworkPackage(final Packet packet) {\r\n\r\n        if (packet.equals(Packet.START_GAME)) {\r\n            Game.instance.showWindow();\r\n            AudioManager.playClip(3);\r\n\r\n            System.out.println(isWhite());\r\n        } else if (packet.equals(Packet.CHANGE_COLOR)) {\r\n            changeColor();\r\n        } else if (packet.equals(Packet.DISCONNECTED)) {\r\n            //TODO:HANDLE DISCONNECTED\r\n        } else {\r\n            //TODO:HANDLE CUSTOM PACKAGE\r\n            Console.warning(packet.getBuffer());\r\n            //packet.unpack(networkMove);//TODO:FIX THIS (RETURN CONSTANT VALUE)\r\n\r\n            Vector from = new Vector(), to = new Vector();\r\n            String[] values = packet.getBuffer().split(\"~\");\r\n\r\n            if (values.length == 2) {\r\n                from.unapck(values[0]);\r\n                to.unapck(values[1]);\r\n            } else\r\n                throw new IllegalArgumentException(\"Invalid buffer format\");\r\n\r\n\r\n            Board.move(from, to);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game/GameManager.java b/src/game/GameManager.java
--- a/src/game/GameManager.java	(revision 67db08ebf08e347ed3c781e11b102a5298358d97)
+++ b/src/game/GameManager.java	(date 1685486085553)
@@ -33,6 +33,7 @@
     public void updateAll() {
         util.Array<Piece> allPieces = Board.getAllPieces();
 
+        Game.initialize();
         allPieces.foreach((Piece piece) -> {
             util.Vector at = piece.getPosition();
 
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import audio.AudioManager;\r\nimport game.GameManager;\r\nimport gui.Menu;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n        RoomManager.initialize();\r\n        if (!NetworkManager.initialize()) {\r\n            try {\r\n                AudioManager.initialize();\r\n                GameManager.initialize();//TODO:MOVE IN INITIALIZERS\r\n\r\n                Menu.instance.showWindow();\r\n                //game.users.User.loadUsers();\r\n                //gui.Login.instance.showWindow();//TODO:ENABLE LATER\r\n            } catch (Exception e) {\r\n                util.Console.error(\"Error while initializing in main method: \" + e.getMessage());\r\n                System.exit(-1);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 67db08ebf08e347ed3c781e11b102a5298358d97)
+++ b/src/Main.java	(date 1685485895397)
@@ -1,5 +1,6 @@
 import audio.AudioManager;
 import game.GameManager;
+import gui.Game;
 import gui.Menu;
 
 public class Main {
Index: src/util/Array.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package util;\r\n\r\n/**\r\n * An array data structure implementation.\r\n * @param <T> The type of elements stored in the array.\r\n */\r\npublic class Array<T> {\r\n\r\n    /**\r\n     * The internal array to store elements.\r\n     */\r\n    private T[] array;\r\n\r\n    /**\r\n     * Constructs a new Array object with an initial size of 0.\r\n     */\r\n    public Array() {\r\n        this.array = createNew(0);\r\n    }\r\n\r\n    /**\r\n     * Returns the internal array.\r\n     *\r\n     * @return The internal array.\r\n     */\r\n    public final T[] getArray() {\r\n        return this.array;\r\n    }\r\n\r\n    /**\r\n     * Creates a new array of the specified size.\r\n     *\r\n     * @param size The size of the new array.\r\n     * @return The newly created array.\r\n     */\r\n    @SuppressWarnings(\"unchecked\")\r\n    private T[] createNew(final int size) {\r\n        return (T[]) new Object[size];\r\n    }\r\n\r\n    /**\r\n     * Resizes the internal array to the specified size.\r\n     *\r\n     * @param newSize The new size of the array.\r\n     */\r\n    private void resize(final int newSize) {\r\n        T[] newArray = createNew(newSize);\r\n\r\n        final int SHORT_SIZE = Math.min(array.length, newSize);\r\n\r\n        if (SHORT_SIZE >= 0) System.arraycopy(this.array, 0, newArray, 0, SHORT_SIZE);\r\n\r\n        this.array = newArray;\r\n    }\r\n\r\n    /**\r\n     * Returns the current size of the array.\r\n     *\r\n     * @return The size of the array.\r\n     */\r\n    public final int size() {\r\n        return this.array.length;\r\n    }\r\n\r\n    /**\r\n     * Checks if the array is empty.\r\n     *\r\n     * @return True if the array is empty, false otherwise.\r\n     */\r\n    public final boolean isEmpty() {\r\n        return size() == 0;\r\n    }\r\n\r\n    /**\r\n     * Replaces the internal array with the provided array.\r\n     *\r\n     * @param array The array to replace the internal array with.\r\n     */\r\n    public void replace(T[] array) {\r\n        this.array = array;\r\n    }\r\n\r\n    /**\r\n     * Sets the element at the specified index in the array.\r\n     *\r\n     * @param index The index at which to set the element.\r\n     * @param item  The item to be set at the specified index.\r\n     * @throws IndexOutOfBoundsException if the index is out of range.\r\n     */\r\n    public void set(final int index, T item) {\r\n        if (index < 0 || index > size())\r\n            throw new IndexOutOfBoundsException(index);\r\n        this.array[index] = item;\r\n    }\r\n\r\n    /**\r\n     * Adds an item to the end of the array.\r\n     *\r\n     * @param item The item to be added.\r\n     */\r\n    public void add(T item) {\r\n        resize(size() + 1);\r\n        this.array[size() - 1] = item;\r\n    }\r\n\r\n    /**\r\n     * Adds multiple items to the end of the array.\r\n     *\r\n     * @param items The array of items to be added.\r\n     */\r\n    public void add(T[] items) {\r\n        for (T item : items) {\r\n            add(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the element at the specified index in the array.\r\n     *\r\n     * @param index The index of the element to retrieve.\r\n     * @return The element at the specified index.\r\n     * @throws IndexOutOfBoundsException if the index is out of range.\r\n     */\r\n    public T get(final int index) {\r\n        if (index < 0 || index >= size())\r\n            throw new IndexOutOfBoundsException(index);\r\n        return this.array[index];\r\n    }\r\n\r\n    /**\r\n     * Checks if the array contains the specified item.\r\n     *\r\n     * @param item The item to search for in the array.\r\n     * @return True if the item is found in the array, false otherwise.\r\n     */\r\n    public final boolean contains(T item) {\r\n        for (T arrayItem : this.array) {\r\n            if (arrayItem == item)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Finds the index of the specified item in the array.\r\n     *\r\n     * @param item The item to find the index of.\r\n     * @return The index of the item in the array, or -1 if the item is not found.\r\n     */\r\n    public final int findIndexOf(T item) {\r\n        if (contains(item)) {\r\n            for (int i = 0; i < size(); i++) {\r\n                if (this.array[i] == item)\r\n                    return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Removes the element at the specified index from the array.\r\n     *\r\n     * @param index The index of the element to remove.\r\n     * @throws IndexOutOfBoundsException if the index is out of range.\r\n     */\r\n    public void remove(final int index) {\r\n        if (index < 0 || index >= size())\r\n            throw new IndexOutOfBoundsException(index);\r\n\r\n        this.array[index] = null;\r\n\r\n        for (int i = index; i < size() - 1; i++)\r\n            this.array[i] = this.array[i + 1];\r\n\r\n        resize(size() - 1);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified item from the array.\r\n     *\r\n     * @param item The item to remove from the array.\r\n     */\r\n    public void remove(T item) {\r\n        remove(findIndexOf(item));\r\n    }\r\n\r\n    /**\r\n     * Clears the array by resizing it to size 0.\r\n     */\r\n    public void clear() {\r\n        resize(0);\r\n    }\r\n\r\n    /**\r\n     * Executes the specified action for each item in the array.\r\n     * @param action the action to execute for each item\r\n     */\r\n    public void foreach(util.events.Action<T> action) {\r\n        for (T item : this.array)\r\n            action.run(item);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        StringBuilder str = new StringBuilder();\r\n\r\n        str.append(\"GenericArray:\\n\");\r\n        for (int i = 0; i < size(); i++) {\r\n            str.append(this.array[i]).append(\"\\n\");\r\n        }\r\n\r\n        return str.toString();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/util/Array.java b/src/util/Array.java
--- a/src/util/Array.java	(revision 67db08ebf08e347ed3c781e11b102a5298358d97)
+++ b/src/util/Array.java	(date 1685476633511)
@@ -18,6 +18,15 @@
         this.array = createNew(0);
     }
 
+    /**
+     * Constructs a new Array object with arbitrary size set by the user.
+     *
+     * @param size The size of the new array.
+     */
+    public Array(final int size) {
+        this.array = createNew(size);
+    }
+
     /**
      * Returns the internal array.
      *
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1685477875094)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1685477875094)
@@ -0,0 +1,10 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="DuplicatedCode" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <Languages>
+        <language minSize="48" name="Java" />
+      </Languages>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"Fixed\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/audio/AudioClip.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/audio/AudioClip.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/audio/AudioManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/audio/AudioManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/game/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/game/Board.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/game/GameManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/game/GameManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/LocalClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/LocalClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/ServerClient.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/ServerClient.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/ServerRoom.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/ServerRoom.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/socket/events/ServerEventable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/socket/events/ServerEventable.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/Array.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/Array.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/Console.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/Console.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/Vector.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/Vector.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/events/Action.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/events/Action.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/events/ArgEvent.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/events/ArgEvent.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/events/Event.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/events/Event.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QMoiVsCVgGjgSev7aJ1d5PId8K\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"jdk.selected.JAVA_MODULE\": \"12\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Aleksa\\IdeaProjects\\OnlineChess\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"OnlineChess\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"\" />\r\n      <created>1685172942860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1685172942860</updated>\r\n      <workItem from=\"1685305074441\" duration=\"15046000\" />\r\n      <workItem from=\"1685364113165\" duration=\"384000\" />\r\n      <workItem from=\"1685364512410\" duration=\"58000\" />\r\n      <workItem from=\"1685364581139\" duration=\"3526000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Setup\">\r\n      <created>1685172992366</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685172992366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Server/Client setup\">\r\n      <created>1685269788259</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685269788259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Server/Client setup\">\r\n      <created>1685274797705</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685274797705</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Server/Client setup\">\r\n      <created>1685275832983</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275832983</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Server/Client setup\">\r\n      <created>1685275988816</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275988816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Quick Fix\">\r\n      <created>1685276024887</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685276024887</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Quick Fix\">\r\n      <created>1685277126581</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685277126581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Foreach in Array\">\r\n      <created>1685371437023</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685371437023</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Foreach in Array\">\r\n      <created>1685379051695</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685379051695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Foreach in Array\">\r\n      <created>1685380334047</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685380334047</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Game GUI\">\r\n      <created>1685384925452</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685384925452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Game GUI\">\r\n      <created>1685386881575</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685386881575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Board Initialization\">\r\n      <created>1685390526513</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685390526513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Pieces Move\">\r\n      <created>1685392740090</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685392740090</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"QuickFix\">\r\n      <created>1685395325023</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395325024</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"QuickFix\">\r\n      <created>1685395942872</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395942872</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"QuickFix\">\r\n      <created>1685435834634</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685435834634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Fixed\">\r\n      <created>1685436366774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685436366774</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"19\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Setup\" />\r\n    <MESSAGE value=\"Server/Client setup\" />\r\n    <MESSAGE value=\"Quick Fix\" />\r\n    <MESSAGE value=\"Editing users\" />\r\n    <MESSAGE value=\"Foreach in Array\" />\r\n    <MESSAGE value=\"Game GUI\" />\r\n    <MESSAGE value=\"Board Initialization\" />\r\n    <MESSAGE value=\"Pieces Move\" />\r\n    <MESSAGE value=\"QuickFix\" />\r\n    <MESSAGE value=\"Fixed\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 67db08ebf08e347ed3c781e11b102a5298358d97)
+++ b/.idea/workspace.xml	(date 1685488693888)
@@ -5,21 +5,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0026f5f2-a006-4a9c-9f3f-a83d0059bec4" name="Changes" comment="Fixed">
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/audio/AudioClip.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/audio/AudioClip.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/audio/AudioManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/audio/AudioManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/game/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/Board.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/game/GameManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/game/GameManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/LocalClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/LocalClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/ServerClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/ServerClient.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/ServerRoom.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/ServerRoom.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/socket/events/ServerEventable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/socket/events/ServerEventable.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/gui/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/Game.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/util/Array.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/Array.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/util/Console.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/Console.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/util/Vector.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/Vector.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/util/events/Action.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/events/Action.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/util/events/ArgEvent.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/events/ArgEvent.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/util/events/Event.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/events/Event.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -45,6 +36,7 @@
   </component>
   <component name="ProjectId" id="2QMoiVsCVgGjgSev7aJ1d5PId8K" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <OptionsSetting value="false" id="Update" />
     <ConfirmationsSetting value="2" id="Add" />
   </component>
   <component name="ProjectViewState">
@@ -65,6 +57,7 @@
     "git-widget-placeholder": "master",
     "ignore.virus.scanning.warn.message": "true",
     "jdk.selected.JAVA_MODULE": "12",
+    "nodejs_package_manager_path": "npm",
     "onboarding.tips.debug.path": "C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java",
     "project.structure.last.edited": "Project",
     "project.structure.proportion": "0.15",
@@ -226,7 +219,14 @@
       <option name="project" value="LOCAL" />
       <updated>1685436366774</updated>
     </task>
-    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL-00019" summary="Fixed">
+      <created>1685474464949</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1685474464949</updated>
+    </task>
+    <option name="localTasksCounter" value="20" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -257,4 +257,7 @@
     <MESSAGE value="Fixed" />
     <option name="LAST_COMMIT_MESSAGE" value="Fixed" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/OnlineChess$Main.ic" NAME="Main Coverage Results" MODIFIED="1685403185032" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
+  </component>
 </project>
\ No newline at end of file
