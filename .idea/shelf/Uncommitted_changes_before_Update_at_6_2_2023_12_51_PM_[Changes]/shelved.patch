Index: src/gui/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport game.Board;\r\nimport game.GameManager;\r\nimport game.Move;\r\nimport game.Piece;\r\nimport gui.images.Field;\r\nimport util.Array;\r\nimport util.Vector;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport javax.swing.table.DefaultTableModel;\r\nimport java.awt.*;\r\n\r\npublic class Game extends Window {\r\n    public Game() {\r\n        super(\"Game\");\r\n        super.setSize(1100, 860);\r\n        super.setLayout(null);\r\n        super.setLocationRelativeTo(null);\r\n\r\n        createTable();\r\n        createInfo();\r\n    }\r\n\r\n        //comment\r\n    gui.images.Field[][] fields = null;\r\n\r\n    public gui.images.Field[][] getFields() {\r\n        return this.fields;\r\n    }\r\n\r\n    public gui.images.Field getField(final int x,final int y) {\r\n        return this.fields[x][y];\r\n    }\r\n\r\n    public gui.images.Field getField(final Vector at) {\r\n        return getField(at.X, at.Y);\r\n    }\r\n\r\n    public void clearFields() {\r\n        for (gui.images.Field[] fieldRow : fields)\r\n            for (gui.images.Field field : fieldRow)\r\n                field.setImage(null);\r\n    }\r\n\r\n    private void createTable() {\r\n        JPanel tablePanel = new JPanel();\r\n\r\n        tablePanel.setLayout(new GridLayout(Board.SIZE, Board.SIZE));\r\n        tablePanel.setBounds(10, 10, 800, 800);\r\n        tablePanel.setName(\"table\");\r\n\r\n        fields = new Field[Board.SIZE][Board.SIZE];\r\n\r\n        boolean ws = false;\r\n        for (int i = 0; i < Board.SIZE; i++) {\r\n            for (int j = 0; j < Board.SIZE; j++) {\r\n                fields[i][j] = new Field(new Vector(i, j), new Vector(100, 100), ws = !ws);\r\n                tablePanel.add(fields[i][j]);\r\n            }\r\n            ws = !ws;\r\n        }\r\n\r\n        add(tablePanel);\r\n    }\r\n\r\n    private JPanel getPlayerInfoPanel() {\r\n        JPanel panel = new JPanel();\r\n        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));\r\n\r\n        JLabel label = new JLabel(\"Player info\", SwingConstants.CENTER);\r\n        panel.setPreferredSize(new Dimension(260, label.getPreferredSize().height));\r\n        panel.setFont(label.getFont().deriveFont(Font.BOLD, 20F));\r\n        panel.add(label);\r\n        panel.add(new JLabel());\r\n        return panel;\r\n    }\r\n\r\n    public void updateInfoTable(Piece piece) {\r\n        int pawnsWhite = 0, pawnsBlack = 0,\r\n            rooksWhite = 0, rooksBlack = 0,\r\n            knightsWhite = 0, knightsBlack = 0,\r\n            bishopsWhite = 0, bishopsBlack = 0;\r\n        boolean queenWhite = false, queenBlack = false,\r\n            kingWhite = false, kingBlack = false;\r\n\r\n        util.Array<Piece> piecesWhite = Board.instance.getWhitePieces(),\r\n                          piecesBlack = Board.instance.getBlackPieces();\r\n        for (int i=0; i<Board.instance.getWhitePieces().size(); i++) {\r\n            switch (piecesWhite.get(i).getType()) {\r\n                case Pawn -> pawnsWhite++;\r\n                case Rook -> rooksWhite++;\r\n                case Knight -> knightsWhite++;\r\n                case Bishop -> bishopsWhite++;\r\n                case Queen -> queenWhite = true;\r\n                case King -> kingWhite = true;\r\n            }\r\n        }\r\n        for (int i=0; i<Board.instance.getBlackPieces().size(); i++) {\r\n            switch (piecesBlack.get(i).getType()) {\r\n                case Pawn -> pawnsBlack++;\r\n                case Rook -> rooksBlack++;\r\n                case Knight -> knightsBlack++;\r\n                case Bishop -> bishopsBlack++;\r\n                case Queen -> queenBlack = true;\r\n                case King -> kingBlack = true;\r\n            }\r\n        }\r\n\r\n        String messageWhite = String.format(\"<html>Username: %s<br>\", \"ime\") +\r\n                String.format(\"ELO: %s<br>\", \"elo\") +\r\n                String.format(\"CurrentPiecesCount: %d<br>\", piecesWhite.size()) +\r\n                String.format(\"Pawns: %d<br>\", pawnsWhite) +\r\n                String.format(\"Rooks (Castles): %d<br>\", rooksWhite) +\r\n                String.format(\"Knights: %d<br>\", knightsWhite) +\r\n                String.format(\"Bishops: %d<br>\", bishopsWhite) +\r\n                String.format(\"Have Queen: %s<br>\", queenWhite ? \"true\" : \"false\") +\r\n                String.format(\"Have King: %s</html>\", kingWhite ? \"true\" : \"false\");\r\n\r\n        String messageBlack = String.format(\"<html>Username: %s<br>\", \"ime\") +\r\n                String.format(\"ELO: %s<br>\", \"elo\") +\r\n                String.format(\"CurrentPiecesCount: %d<br>\", piecesBlack.size()) +\r\n                String.format(\"Pawns: %d<br>\", pawnsBlack) +\r\n                String.format(\"Rooks (Castles): %d<br>\", rooksBlack) +\r\n                String.format(\"Knights: %d<br>\", knightsBlack) +\r\n                String.format(\"Bishops: %d<br>\", bishopsBlack) +\r\n                String.format(\"Have Queen: %s<br>\", queenBlack ? \"true\" : \"false\") +\r\n                String.format(\"Have King: %s</html>\", kingBlack ? \"true\" : \"false\");\r\n\r\n        playerLabel.setText(messageWhite);\r\n        opponentLabel.setText(messageBlack);\r\n\r\n        Color playColor = ColorGradient.FIELD.getColor(GameManager.instance.canPlay());\r\n        Color opponentColor = ColorGradient.FIELD.getColor(!GameManager.instance.canPlay());\r\n        playerPanel.setBorder(BorderFactory.createLineBorder(playColor, 5));\r\n        opponentPanel.setBorder(BorderFactory.createLineBorder(opponentColor, 5));\r\n    }\r\n\r\n    public void updateMovesTable(Piece piece) {\r\n        if (movesTableModel.getRowCount() <= 10) {\r\n            String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);\r\n            movesTableModel.addRow(new Object[] { moveString });\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    private JPanel playerPanel, opponentPanel;\r\n    private JLabel playerLabel, opponentLabel;\r\n    private DefaultTableModel movesTableModel;\r\n\r\n    private void createInfo() {\r\n        movesTableModel = new DefaultTableModel(new Object[] { \"Column 1\" }, 0) {\r\n            @Override\r\n            public boolean isCellEditable(int row, int column) { return false; }\r\n        };\r\n        JTable movesPanel = new JTable(movesTableModel);\r\n        movesPanel.setName(\"moves_panel\");\r\n        movesPanel.setLayout(new BoxLayout(movesPanel, BoxLayout.Y_AXIS));\r\n        movesPanel.setTableHeader(null);\r\n        movesPanel.setBounds(823, 475, 251, 240);\r\n        JPanel panel = new JPanel();\r\n        panel.add(movesPanel);\r\n        panel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 5));\r\n        panel.setBounds(818, 470, 260, 250);\r\n        add(panel);\r\n\r\n        Board.instance.onPieceMoved.add(this::updateMovesTable);\r\n\r\n        JPanel timerPanel = new JPanel();\r\n        timerPanel.setName(\"timer_panel\");\r\n        Border timerBorder = BorderFactory.createLineBorder(Color.GRAY, 5);\r\n        timerPanel.setBorder(timerBorder);\r\n        timerPanel.setLayout(new BoxLayout(timerPanel, BoxLayout.Y_AXIS));\r\n        timerPanel.setBounds(818, 725, 260, 85);\r\n\r\n        playerPanel = getPlayerInfoPanel();\r\n        opponentPanel = getPlayerInfoPanel();\r\n\r\n        playerPanel.setBounds(818, 10, 260, 225);\r\n        playerPanel.setName(\"player_panel\");\r\n        opponentPanel.setBounds(818, 240, 260, 225);\r\n        opponentPanel.setName(\"opponent_panel\");\r\n\r\n        playerLabel = (JLabel) playerPanel.getComponents()[1];\r\n        opponentLabel = (JLabel) opponentPanel.getComponents()[1];\r\n\r\n        updateInfoTable(null);\r\n        Board.instance.onPieceMoved.add(this::updateInfoTable);\r\n\r\n        add(playerPanel);\r\n        add(opponentPanel);\r\n        add(movesPanel);\r\n        add(timerPanel);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/Game.java b/src/gui/Game.java
--- a/src/gui/Game.java	(revision efd2c37149ed21418307a4618442b8ea1bc965c1)
+++ b/src/gui/Game.java	(date 1685621797297)
@@ -139,13 +139,10 @@
     }
 
     public void updateMovesTable(Piece piece) {
-        if (movesTableModel.getRowCount() <= 10) {
-            String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);
-            movesTableModel.addRow(new Object[] { moveString });
-        }
-        else {
-
-        }
+        if (movesTableModel.getRowCount() >= 15)
+            movesTableModel.removeRow(0);
+        String moveString = Board.instance.moves.get(Board.instance.moves.size() - 1);
+        movesTableModel.addRow(new Object[] { moveString });
     }
 
     private JPanel playerPanel, opponentPanel;
@@ -162,11 +159,11 @@
         movesPanel.setLayout(new BoxLayout(movesPanel, BoxLayout.Y_AXIS));
         movesPanel.setTableHeader(null);
         movesPanel.setBounds(823, 475, 251, 240);
-        JPanel panel = new JPanel();
-        panel.add(movesPanel);
-        panel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 5));
-        panel.setBounds(818, 470, 260, 250);
-        add(panel);
+        JPanel movesPanelWrapper = new JPanel();
+        movesPanelWrapper.add(movesPanel);
+        movesPanelWrapper.setBorder(BorderFactory.createLineBorder(Color.GRAY, 5));
+        movesPanelWrapper.setBounds(818, 470, 260, 250);
+        add(movesPanelWrapper);
 
         Board.instance.onPieceMoved.add(this::updateMovesTable);
 
@@ -196,4 +193,5 @@
         add(movesPanel);
         add(timerPanel);
     }
+    // TODO: Dodaj metodu za odbrojavanje vremena
 }
\ No newline at end of file
Index: src/gui/GuiManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport game.Board;\r\nimport game.Move;\r\nimport game.Piece;\r\nimport gui.images.Field;\r\nimport gui.images.Image;\r\nimport util.Array;\r\nimport util.Console;\r\nimport util.Vector;\r\n\r\npublic class GuiManager {\r\n    public static GuiManager instance;\r\n\r\n    public static void initialize() {\r\n        util.Console.message(\"Initializing GuiManager.\", Console.PrintType.Main);\r\n\r\n        Image.wakeUp();\r\n\r\n        if (instance == null)\r\n            instance = new GuiManager();\r\n    }\r\n\r\n    private final Login loginWindow;\r\n    private final Menu menuWindow;\r\n    private final Game gameWindow;\r\n\r\n    public Login getLoginWindow() {\r\n        return this.loginWindow;\r\n    }\r\n\r\n    public Menu getMenuWindow() {\r\n        return this.menuWindow;\r\n    }\r\n\r\n    public Game getGameWindow() {\r\n        return this.gameWindow;\r\n    }\r\n\r\n    public GuiManager() {\r\n        this.loginWindow = new Login();\r\n        this.menuWindow = new Menu();\r\n        this.gameWindow = new Game();\r\n\r\n        this.loginWindow.showWindow();\r\n\r\n        //Field.onFieldClicked.add(this::onFieldClicked);\r\n\r\n        Board.instance.onPieceEaten.add(this::onPieceEaten);\r\n        Board.instance.onPieceMoved.add(this::onPieceMoved);\r\n        Board.instance.onPieceMove.add(this::onPieceMove);\r\n\r\n        updateFields();\r\n    }\r\n\r\n    private void onPieceMove(Move move) {\r\n        util.Vector at = move.getFrom();\r\n        this.gameWindow.getField(at).setImage(null);\r\n    }\r\n\r\n    private void onPieceMoved(Piece piece) {\r\n        util.Vector at = piece.getPosition();\r\n\r\n        this.gameWindow.getField(at).setImage(Image.IMAGES[piece.getColorCode()][piece.getTypeCode() - 1]);\r\n    }\r\n\r\n    private void onPieceEaten(Piece piece) {\r\n        util.Vector at = piece.getPosition();\r\n\r\n        this.gameWindow.getField(at).setImage(null);\r\n    }\r\n\r\n    public void updateFields() {\r\n        this.gameWindow.clearFields();\r\n\r\n        util.Array<Piece> allPieces = Board.instance.getAllPieces();\r\n        allPieces.foreach((Piece piece) -> {\r\n            util.Vector at = piece.getPosition();\r\n\r\n            this.gameWindow.getField(at).setImage(Image.IMAGES[piece.getColorCode()][piece.getTypeCode() - 1]);\r\n        });\r\n    }\r\n\r\n    public void startGame(){\r\n        updateFields();\r\n        menuWindow.hideWindow();\r\n        gameWindow.showWindow();\r\n    }\r\n\r\n    public void loggedIn() {\r\n        this.loginWindow.hideWindow();\r\n        this.menuWindow.showWindow();\r\n    }\r\n\r\n    //HIGHLIGHTING\r\n    private final Array<Field> currentHighlights = new Array<>();\r\n\r\n    public void resetHighlights() {\r\n        currentHighlights.foreach((Field field) -> {\r\n            field.setColor(ColorGradient.FIELD.getColor(field.isGradient()));\r\n        });\r\n        currentHighlights.clear();\r\n    }\r\n\r\n    private void setHighlight(Vector at) {\r\n        Field temp = this.gameWindow.getField(at);\r\n        temp.setColor(ColorGradient.HIGHLIGHT.getColor(temp.isGradient()));\r\n        currentHighlights.add(temp);\r\n    }\r\n\r\n    private void setHiglights(util.Array<Vector> at) {\r\n        at.foreach((Vector position) -> {\r\n            Field temp = this.gameWindow.getField(position);\r\n\r\n            temp.setColor(Board.instance.isNull(position) ? ColorGradient.MOVE.getColor(temp.isGradient()) : ColorGradient.ATTACK.getColor(temp.isGradient()));\r\n            currentHighlights.add(temp);\r\n        });\r\n    }\r\n\r\n    //TODO:IMPLEMENT THIS LATER\r\n    public void onFieldClicked(Vector vector) {\r\n        resetHighlights();\r\n\r\n        Piece piece = Board.instance.get(vector);\r\n\r\n        if (piece == null)\r\n            return;\r\n\r\n        setHighlight(vector);\r\n        setHiglights(piece.getMoves());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/GuiManager.java b/src/gui/GuiManager.java
--- a/src/gui/GuiManager.java	(revision efd2c37149ed21418307a4618442b8ea1bc965c1)
+++ b/src/gui/GuiManager.java	(date 1685620818784)
@@ -22,6 +22,7 @@
     }
 
     private final Login loginWindow;
+    private final Register registerWindow;
     private final Menu menuWindow;
     private final Game gameWindow;
 
@@ -29,6 +30,10 @@
         return this.loginWindow;
     }
 
+    public Register getRegisterWindow() {
+        return this.registerWindow;
+    }
+
     public Menu getMenuWindow() {
         return this.menuWindow;
     }
@@ -39,6 +44,7 @@
 
     public GuiManager() {
         this.loginWindow = new Login();
+        this.registerWindow = new Register();
         this.menuWindow = new Menu();
         this.gameWindow = new Game();
 
@@ -91,6 +97,11 @@
         this.loginWindow.hideWindow();
         this.menuWindow.showWindow();
     }
+
+    public void registered() {
+        this.registerWindow.hideWindow();
+        this.menuWindow.showWindow();
+    }
 
     //HIGHLIGHTING
     private final Array<Field> currentHighlights = new Array<>();
Index: src/gui/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package gui;\r\n\r\nimport util.Console;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class Login extends Window implements ActionListener {\r\n    public Login() {\r\n        super(\"Login\");\r\n        createUserInterface();\r\n    }\r\n\r\n    TextField usernameField;\r\n    JPasswordField passwordField;\r\n\r\n    private void createUserInterface() {\r\n\r\n        setLayout(null);\r\n\r\n        final int SPACING = 30;\r\n\r\n        int x = 130;\r\n        int y = 100;\r\n\r\n        JLabel label = new JLabel(\"LOGIN\");\r\n\r\n        label.setBounds(x, y, 120, 20);\r\n        label.setForeground(Color.WHITE);\r\n\r\n        add(label);\r\n        y += SPACING;\r\n\r\n        label = new JLabel(\"Username:\");\r\n\r\n        label.setBounds(x, y, 120, 20);\r\n        label.setForeground(Color.WHITE);\r\n\r\n        add(label);\r\n        y += SPACING - 10;\r\n\r\n        usernameField = new TextField();\r\n\r\n        usernameField.setBounds(x, y, 120, 20);\r\n\r\n        add(usernameField);\r\n        y += SPACING;\r\n\r\n        label = new JLabel(\"Password:\");\r\n\r\n        label.setBounds(x, y, 120, 20);\r\n        label.setForeground(Color.WHITE);\r\n\r\n        add(label);\r\n        y += SPACING - 10;\r\n\r\n        passwordField = new JPasswordField();\r\n\r\n        passwordField.setBounds(x, y, 120, 20);\r\n\r\n        add(passwordField);\r\n        y += SPACING;\r\n\r\n        JButton button = new JButton(\"Login\");\r\n\r\n        button.setBounds(x, y, 120, 20);\r\n        button.addActionListener(this);\r\n\r\n        add(button);\r\n        y += SPACING;\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n        String userName = usernameField.getText();\r\n        String password = new String(passwordField.getPassword());\r\n\r\n        if (game.users.User.login(userName, password)) {\r\n            util.Console.message(\"Valid User\", Console.PrintType.Gui);\r\n            GuiManager.instance.loggedIn();\r\n        } else {\r\n            usernameField.setText(\"\");\r\n            passwordField.setText(\"\");\r\n\r\n            JOptionPane.showMessageDialog(null, \"Invalid Username/Password! Try again.\", \"User Validation\", JOptionPane.ERROR_MESSAGE);\r\n\r\n            util.Console.warning(\"Invalid User!\", Console.PrintType.Gui);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/Login.java b/src/gui/Login.java
--- a/src/gui/Login.java	(revision efd2c37149ed21418307a4618442b8ea1bc965c1)
+++ b/src/gui/Login.java	(date 1685620821765)
@@ -63,12 +63,19 @@
         add(passwordField);
         y += SPACING;
 
-        JButton button = new JButton("Login");
+        JButton loginButton = new JButton("Login");
+        loginButton.setBounds(x, y, 58, 20);
+        loginButton.addActionListener(this);
 
-        button.setBounds(x, y, 120, 20);
-        button.addActionListener(this);
+        JButton registerButton = new JButton("Register");
+        registerButton.setBounds(x + 62, y, 58, 20);
+        registerButton.addActionListener(e -> {
+            this.hideWindow();
+            GuiManager.instance.getRegisterWindow().showWindow();
+        });
 
-        add(button);
+        add(loginButton);
+        add(registerButton);
         y += SPACING;
     }
 
Index: src/gui/Register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/gui/Register.java b/src/gui/Register.java
new file mode 100644
--- /dev/null	(date 1685702958488)
+++ b/src/gui/Register.java	(date 1685702958488)
@@ -0,0 +1,97 @@
+package gui;
+
+import game.users.User;
+import util.Console;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.io.IOException;
+
+public class Register extends Window implements ActionListener {
+    public Register() {
+        super("Register");
+        createUserInterface();
+    }
+
+    TextField usernameField;
+    JPasswordField passwordField;
+
+    private void createUserInterface() {
+        setLayout(null);
+        final int SPACING = 30;
+        int x = 130;
+        int y = 100;
+
+        JLabel label = new JLabel("Register");
+
+        label.setBounds(x, y, 120, 20);
+        label.setForeground(Color.WHITE);
+
+        add(label);
+        y += SPACING;
+
+        label = new JLabel("Username:");
+
+        label.setBounds(x, y, 120, 20);
+        label.setForeground(Color.WHITE);
+
+        add(label);
+        y += SPACING - 10;
+
+        usernameField = new TextField();
+
+        usernameField.setBounds(x, y, 120, 20);
+
+        add(usernameField);
+        y += SPACING;
+
+        label = new JLabel("Password:");
+
+        label.setBounds(x, y, 120, 20);
+        label.setForeground(Color.WHITE);
+
+        add(label);
+        y += SPACING - 10;
+
+        passwordField = new JPasswordField();
+
+        passwordField.setBounds(x, y, 120, 20);
+
+        add(passwordField);
+        y += SPACING;
+
+        JButton button = new JButton("Login");
+
+        button.setBounds(x, y, 120, 20);
+        button.addActionListener(this);
+
+        add(button);
+//        y += SPACING;
+    }
+
+    @Override
+    public void actionPerformed(ActionEvent e) {
+
+        String userName = usernameField.getText();
+        String password = new String(passwordField.getPassword());
+
+        try {
+            if (User.addUser(userName, password))
+                GuiManager.instance.registered();
+        } catch (IOException ignored) {}
+
+//        if (game.users.User.login(userName, password)) {
+//            util.Console.message("Valid User", Console.PrintType.Gui);
+//            GuiManager.instance.loggedIn();
+//        } else {
+//            usernameField.setText("");
+//            passwordField.setText("");
+//
+//            JOptionPane.showMessageDialog(null, "Invalid Username/Password! Try again.", "User Validation", JOptionPane.ERROR_MESSAGE);
+//
+//            util.Console.warning("Invalid User!", Console.PrintType.Gui);
+//        }
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"Fixed\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gui/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gui/Game.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QMoiVsCVgGjgSev7aJ1d5PId8K\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;12&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Aleksa/Desktop/CS120-IspitnaPitanja.docx&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/Aleksa/IdeaProjects/OnlineChess/src/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Aleksa\\IdeaProjects\\OnlineChess\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"OnlineChess\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0026f5f2-a006-4a9c-9f3f-a83d0059bec4\" name=\"Changes\" comment=\"\" />\r\n      <created>1685172942860</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1685172942860</updated>\r\n      <workItem from=\"1685305074441\" duration=\"15046000\" />\r\n      <workItem from=\"1685364113165\" duration=\"384000\" />\r\n      <workItem from=\"1685364512410\" duration=\"58000\" />\r\n      <workItem from=\"1685364581139\" duration=\"3526000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Setup\">\r\n      <created>1685172992366</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685172992366</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Server/Client setup\">\r\n      <created>1685269788259</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685269788259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Server/Client setup\">\r\n      <created>1685274797705</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685274797705</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Server/Client setup\">\r\n      <created>1685275832983</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275832983</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Server/Client setup\">\r\n      <created>1685275988816</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685275988816</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Quick Fix\">\r\n      <created>1685276024887</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685276024887</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Quick Fix\">\r\n      <created>1685277126581</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685277126581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Foreach in Array\">\r\n      <created>1685371437023</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685371437023</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Foreach in Array\">\r\n      <created>1685379051695</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685379051695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Foreach in Array\">\r\n      <created>1685380334047</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685380334047</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Game GUI\">\r\n      <created>1685384925452</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685384925452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Game GUI\">\r\n      <created>1685386881575</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685386881575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Board Initialization\">\r\n      <created>1685390526513</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685390526513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Pieces Move\">\r\n      <created>1685392740090</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685392740090</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"QuickFix\">\r\n      <created>1685395325023</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395325024</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"QuickFix\">\r\n      <created>1685395942872</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685395942872</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"QuickFix\">\r\n      <created>1685435834634</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685435834634</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Fixed\">\r\n      <created>1685436366774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685436366774</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Added Fixed Movement\">\r\n      <created>1685458352412</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685458352412</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Added Fixed Movement\">\r\n      <created>1685514249595</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685514249595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Main Fix\">\r\n      <created>1685601250344</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685601250344</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Fixed\">\r\n      <created>1685607165596</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685607165596</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Fixed\">\r\n      <created>1685607183694</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685607183694</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"24\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"Setup\" />\r\n    <MESSAGE value=\"Server/Client setup\" />\r\n    <MESSAGE value=\"Quick Fix\" />\r\n    <MESSAGE value=\"Editing users\" />\r\n    <MESSAGE value=\"Foreach in Array\" />\r\n    <MESSAGE value=\"Game GUI\" />\r\n    <MESSAGE value=\"Board Initialization\" />\r\n    <MESSAGE value=\"Pieces Move\" />\r\n    <MESSAGE value=\"QuickFix\" />\r\n    <MESSAGE value=\"Added Fixed Movement\" />\r\n    <MESSAGE value=\"Main Fix\" />\r\n    <MESSAGE value=\"Fixed\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/OnlineChess$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1685403185032\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision efd2c37149ed21418307a4618442b8ea1bc965c1)
+++ b/.idea/workspace.xml	(date 1685702960573)
@@ -5,8 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0026f5f2-a006-4a9c-9f3f-a83d0059bec4" name="Changes" comment="Fixed">
+      <change afterPath="$PROJECT_DIR$/src/gui/Register.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/gui/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/gui/GuiManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/GuiManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/gui/Login.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gui/Login.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -88,6 +91,8 @@
       <workItem from="1685364113165" duration="384000" />
       <workItem from="1685364512410" duration="58000" />
       <workItem from="1685364581139" duration="3526000" />
+      <workItem from="1685618103260" duration="3695000" />
+      <workItem from="1685702883922" duration="76000" />
     </task>
     <task id="LOCAL-00001" summary="Setup">
       <created>1685172992366</created>
@@ -250,7 +255,14 @@
       <option name="project" value="LOCAL" />
       <updated>1685607183694</updated>
     </task>
-    <option name="localTasksCounter" value="24" />
+    <task id="LOCAL-00024" summary="Fixed">
+      <created>1685609512216</created>
+      <option name="number" value="00024" />
+      <option name="presentableId" value="LOCAL-00024" />
+      <option name="project" value="LOCAL" />
+      <updated>1685609512216</updated>
+    </task>
+    <option name="localTasksCounter" value="25" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
