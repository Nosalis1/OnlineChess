Index: src/game/users/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/game/users/User.java b/src/game/users/User.java
--- a/src/game/users/User.java	
+++ b/src/game/users/User.java	
@@ -49,40 +49,73 @@
         }
     }
 
-//    public static void removeUsers(String[] userNames) {
-//        for (String userName : userNames)
-//            removeUsers(userName);
-//    }
-//    public static void removeUsers(String userName) {
-//
-//    }
-//    public static void addUsers(String[] userNames) {
-//        List<String> unprocessedUsers = new ArrayList<>();
-//        for (String userName : userNames) {
-//            if (!existingUsers.contains())
-//                unprocessedUsers.add(userName);
-//            addUsers(userName);
-//        }
-//    }
-//    public static void addUsers(String userName) {
-//
-//    }
-//
+    public boolean addUser() {
+        if (!existingUsers.contains(this)) {
+
+            return true;
+        }
+        return false;
+    }
+    public static boolean addUser(String userName, String password) {
+        password = getMD5StringHash(password);
+        if (!existingUsers.contains(new User(userName, password))) {
+
+            return true;
+        }
+        return false;
+    }
+    public static boolean addUser(User user) {
+        if (!existingUsers.contains(user)) {
+
+            return true;
+        }
+        return false;
+    }
+
+    public void removeUser() {
+        if (existingUsers.contains(this)) {
+
+        }
+    }
+    public static boolean removeUser(String userName) {
+        boolean userExists = false;
+        for (User user : existingUsers.getArray())
+            if (user.getUserName().equals(userName)) {
+                userExists = true;
+                break;
+            }
+        if (userExists) {
+
+            return true;
+        }
+        else return false;
+    }
+    public static boolean removeUser(User user) {
+        if (existingUsers.contains(user)) {
+
+            return true;
+        }
+        return false;
+    }
+
     public final String getUserName() {
         return this.userName;
     }
     public final boolean isCorrectPassword(String password) {
+        return this.password.equals(getMD5StringHash(password));
+    }
+
+    private static String getMD5StringHash(String inputString) {
         try {
             java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5");
-            md.update(password.getBytes());
+            md.update(inputString.getBytes());
             StringBuilder hexString = new StringBuilder();
             for (byte b : md.digest())
                 hexString.append(String.format("%02x", b));
-            util.Console.message(hexString.toString());
-            return this.password.equals(hexString.toString().toLowerCase());
+            return hexString.toString().toLowerCase();
         } catch (java.security.NoSuchAlgorithmException e) {
-            util.Console.error("Set hashing algorithm in password comparing method doesn't exist!");
-            return false;
+            util.Console.error("Set hashing algorithm in User class doesn't exist!");
+            return "";
         }
     }
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_14" project-jdk-name="11" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="12" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
